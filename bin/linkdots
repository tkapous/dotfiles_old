#!/bin/bash

# links files from SRC to their provided LINK

DOTFILESPATH=$HOME
GITURL=https://github.com/Biggybi/dotfiles
SRC=$DOTFILESPATH/dotfiles
DST=$HOME
BACKUP=$DOTFILESPATH/dotfiles/dots_back

TEST=0
if [ $TEST == 1 ]; then
  BACKUP="/tmp/linkdots_test/dots_back/"
  [ $BACKUP == "/tmp/linkdots_test/dots_back" ] && mkdir "$BACKUP"
  DST="/tmp/linkdots_test/dot"
  [ $DST == "/tmp/linkdots_test/dot" ] && mkdir "$DST"
  echo "backup = " $BACKUP
  echo "dst = " $DST
  echo "src = " $SRC
fi

cd $SRC

# git files to link
DOTS=(vim
  nvim
  shells/zsh/zshrc
  shells/zsh/zshenv
  shells/zsh/zsh_aliases
  shells/xterm/Xresources
  shells/bash/bashrc
  shells/bash/bash_aliases
  inputrc
  tmux/tmux.conf
  bin
  git/config
  git/git_template
  fonts
  ssh/ssh_config
  shells/alacritty/alacritty.yml)

# links to create locally
LINK=(.vim
  .config/nvim
  .zshrc
  .zshenv
  .zsh_aliases
  .Xresources
  .bashrc
  .bash_aliases
  .inputrc
  .tmux.conf
  bin
  .config/git/config
  .git_template
  .fonts
  .ssh/config
  .config/alacritty/alacritty.yml)

if [ -d "$SRC" ]; then
  echo "Not cloning : $SRC exists"
else
  git clone $GITURL $SRC
fi

if [ "$1" == "--git" ] || [ "$1" == "-g" ] || [ "$1" == "--plugins" ]; then
  echo "Cloning plugins"
  cd "${DOT[0]}"
  git submodule init
  git submodule update
else
  echo "Plugins already installed"
fi

i=0
for f in "${DOTS[@]}"; do
  l="${LINK[i]}"
  echo "$i $l"
  cmp -s "$SRC/$f" "$DST/$l"
  if [ $? -eq 1 ] && [ -n "$l" ] && [ -e "$DST/$l" ]; then
    echo "backing up..."
    lback=$l
    if [ -e "$BACKUP/$l" ] && [ -n "$l" ]; then
      j=0
      while [ -e "$BACKUP/$lback/" ]; do
        let j=j+1
        echo "$BACKUP/$lback exists, new backup file"
        BACKUP="$BACKUP/$lback$j"
        echo "$BACKUP/$lback$j new backup"
      done
    fi
    if [ -d $DST/$l ]; then
      mkdir -p "$BACKUP/$lback"
      mv "$DST/$l/*" "$BACKUP/$lback"
    else
      mv "$DST/$l" "$BACKUP/$lback"
    fi
    echo "save '$l' to '$BACKUP/$lback'"
  fi
  if [ ! -e "$DST/$l" ]; then
    linkparent=$(echo $DST/$l | sed 's/\(\/.*\/\).*/\1/')
    ! [ -d $linkparent ] && mkdir -p $linkparent
    ln -fs "$SRC/$f" "$DST/$l"
    echo "link created : $l -> $f "
  fi
  let i=i+1
done
